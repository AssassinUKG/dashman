/* Enhanced Theme Styles for Dashman */

/* Background Types */
.background-color {
  background-attachment: fixed;
}

.background-gradient {
  background-attachment: fixed;
}

.background-image {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
}

.background-pattern {
  position: relative;
}

.background-pattern::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 1; /* Above body background, behind content */
  opacity: var(--pattern-opacity, 0.2);
  color: var(--pattern-color, var(--accent-color));
}

/* Pattern Styles */
.pattern-dots::before {
  background-image: radial-gradient(circle, var(--pattern-color, var(--accent-color)) 1px, transparent 1px);
  background-size: var(--pattern-size, 20px) var(--pattern-size, 20px);
}

.pattern-grid::before {
  background-image: 
    linear-gradient(var(--pattern-color, var(--accent-color)) 1px, transparent 1px),
    linear-gradient(90deg, var(--pattern-color, var(--accent-color)) 1px, transparent 1px);
  background-size: var(--pattern-size, 20px) var(--pattern-size, 20px);
}

.pattern-waves::before {
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 10px,
    var(--pattern-color, var(--accent-color)) 10px,
    var(--pattern-color, var(--accent-color)) 20px
  );
  background-size: var(--pattern-size, 20px) var(--pattern-size, 20px);
}

.pattern-circuit::before {
  background-image: 
    linear-gradient(90deg, var(--pattern-color, var(--accent-color)) 1px, transparent 1px),
    linear-gradient(var(--pattern-color, var(--accent-color)) 1px, transparent 1px),
    radial-gradient(circle at 20px 20px, var(--pattern-color, var(--accent-color)) 2px, transparent 2px);
  background-size: var(--pattern-size, 20px) var(--pattern-size, 20px);
}

.pattern-hexagon::before {
  background-image: 
    radial-gradient(circle at 50% 50%, var(--pattern-color, var(--accent-color)) 2px, transparent 2px),
    linear-gradient(30deg, transparent 24%, var(--pattern-color, var(--accent-color)) 25%, var(--pattern-color, var(--accent-color)) 26%, transparent 27%, transparent 74%, var(--pattern-color, var(--accent-color)) 75%, var(--pattern-color, var(--accent-color)) 76%, transparent 77%),
    linear-gradient(-30deg, transparent 24%, var(--pattern-color, var(--accent-color)) 25%, var(--pattern-color, var(--accent-color)) 26%, transparent 27%, transparent 74%, var(--pattern-color, var(--accent-color)) 75%, var(--pattern-color, var(--accent-color)) 76%, transparent 77%);
  background-size: var(--pattern-size, 20px) var(--pattern-size, 20px);
}

.pattern-diagonal::before {
  background-image: repeating-linear-gradient(
    45deg,
    var(--pattern-color, currentColor) 0,
    var(--pattern-color, currentColor) 1px,
    transparent 1px,
    transparent 10px
  );
  background-size: var(--pattern-size, 20px) var(--pattern-size, 20px);
  opacity: var(--pattern-opacity, 0.2);
  color: var(--pattern-color, currentColor);
}

.pattern-triangles::before {
  background-image: 
    linear-gradient(45deg, transparent 33%, var(--pattern-color, currentColor) 33%, var(--pattern-color, currentColor) 66%, transparent 66%),
    linear-gradient(-45deg, transparent 33%, var(--pattern-color, currentColor) 33%, var(--pattern-color, currentColor) 66%, transparent 66%);
  background-size: var(--pattern-size, 20px) var(--pattern-size, 20px);
  opacity: var(--pattern-opacity, 0.2);
  color: var(--pattern-color, currentColor);
}

/* Tile Styles */
.tile-default {
  backdrop-filter: none;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transition: all 0.2s ease;
}

.tile-glass {
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 
    0 8px 32px 0 rgba(31, 38, 135, 0.37),
    inset 0 1px 0 0 rgba(255, 255, 255, 0.1);
}

.tile-neon {
  box-shadow: 
    0 0 10px currentColor,
    0 0 20px currentColor,
    0 0 30px currentColor,
    inset 0 0 10px rgba(255, 255, 255, 0.1);
  border: 2px solid currentColor;
  position: relative;
  overflow: hidden;
  border-radius: inherit; /* Inherit border radius from parent */
}

.tile-neon::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    45deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  animation: neon-shine 2s infinite;
  pointer-events: none;
  border-radius: inherit; /* Inherit border radius */
}

.tile-minimal {
  box-shadow: none;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.tile-outlined {
  background: transparent !important;
  border: 2px solid currentColor;
  box-shadow: none;
}

/* Header Styles */
.header-minimal {
  backdrop-filter: none;
  background: transparent !important;
  box-shadow: none;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.header-glass {
  backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.05) !important;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.header-centered {
  text-align: center;
  justify-content: center;
}

.header-floating {
  border-radius: 12px;
  margin: 16px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
}

/* Animation Classes */
.animate-fade {
  animation: fadeIn 0.5s ease-out;
}

.animate-slide {
  animation: slideIn 0.5s ease-out;
}

.animate-scale {
  animation: scaleIn 0.3s ease-out;
}

.animate-bounce {
  animation: bounceIn 0.6s ease-out;
}

.animate-pulse {
  animation: pulse 2s infinite;
}

.animate-glow {
  animation: glow 2s ease-in-out infinite alternate;
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

/* Global animation fixes */
[class*="animate-"] {
  border-radius: inherit;
}

[class*="animate-"]:not(.animate-floating):not(.animate-bounce) {
  overflow: hidden; /* Prevent effects from bleeding outside border radius */
}

/* Keyframe Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from { 
    opacity: 0;
    transform: translateY(20px);
  }
  to { 
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from { 
    opacity: 0;
    transform: scale(0.95);
  }
  to { 
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulse {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.05);
  }
}

@keyframes glow {
  from {
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.5);
  }
  to {
    box-shadow: 0 0 30px rgba(59, 130, 246, 0.8), 0 0 40px rgba(59, 130, 246, 0.3);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes neon-shine {
  0% {
    transform: translateX(-100%) translateY(-100%) rotate(45deg);
  }
  100% {
    transform: translateX(100%) translateY(100%) rotate(45deg);
  }
}

/* Particle Effects */
.particles-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 0; /* Behind content but above body background */
  overflow: hidden;
}

.particle {
  position: absolute;
  width: var(--particle-size, 3px);
  height: var(--particle-size, 3px);
  background: var(--particle-color, var(--primary-color));
  border-radius: 50%;
  opacity: 0.6;
  animation: particleFloat 8s infinite linear;
  box-shadow: 0 0 6px var(--particle-color, var(--primary-color));
}

.particle:nth-child(odd) {
  background: var(--particle-color, var(--accent-color));
  box-shadow: 0 0 6px var(--particle-color, var(--accent-color));
  animation-duration: 6s;
}

.particle:nth-child(3n) {
  width: calc(var(--particle-size, 3px) * 0.7);
  height: calc(var(--particle-size, 3px) * 0.7);
  animation-duration: 10s;
}

@keyframes particleFloat {
  0% {
    transform: translateY(100vh) translateX(0) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 0.8;
  }
  90% {
    opacity: 0.8;
  }
  100% {
    transform: translateY(-10vh) translateX(100px) rotate(360deg);
    opacity: 0;
  }
}

/* Enhanced Animations */
.animate-glow {
  animation: enhancedGlow var(--glow-speed, 3s) ease-in-out infinite alternate;
  border-radius: inherit; /* Inherit border radius to prevent black edges */
  overflow: hidden; /* Ensure glow respects border radius */
}

.animate-pulse {
  animation: enhancedPulse var(--pulse-speed, 2s) ease-in-out infinite;
  border-radius: inherit;
  overflow: hidden;
}

.animate-float {
  animation: enhancedFloat var(--float-speed, 4s) ease-in-out infinite;
  border-radius: inherit;
}

@keyframes enhancedGlow {
  from {
    box-shadow: 
      0 0 calc(var(--glow-intensity, 50) * 0.4px) var(--glow-color, var(--primary-color)),
      0 0 calc(var(--glow-intensity, 50) * 0.8px) var(--glow-color, var(--primary-color)),
      0 0 calc(var(--glow-intensity, 50) * 1.2px) var(--glow-color, var(--primary-color));
    filter: brightness(1);
  }
  to {
    box-shadow: 
      0 0 calc(var(--glow-intensity, 50) * 0.6px) var(--glow-color, var(--accent-color)),
      0 0 calc(var(--glow-intensity, 50) * 1.2px) var(--glow-color, var(--accent-color)),
      0 0 calc(var(--glow-intensity, 50) * 1.8px) var(--glow-color, var(--accent-color));
    filter: brightness(calc(1 + var(--glow-intensity, 50) * 0.004));
  }
}

@keyframes enhancedPulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
    box-shadow: 0 0 0 var(--pulse-color, var(--primary-color));
  }
  50% {
    transform: scale(1.02);
    opacity: 0.9;
    box-shadow: 0 0 20px var(--pulse-color, var(--primary-color));
  }
}

@keyframes enhancedFloat {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  25% {
    transform: translateY(calc(-1 * var(--float-distance, 10px) * 0.5)) rotate(1deg);
  }
  75% {
    transform: translateY(calc(-1 * var(--float-distance, 10px) * 0.3)) rotate(-1deg);
  }
}

/* Compact Mode Styles */
.compact-mode .dashboard-tile {
  padding: 12px !important;
  min-height: 60px !important;
}

.compact-mode .tile-title {
  font-size: 14px !important;
  margin-bottom: 4px !important;
}

.compact-mode .tile-description {
  font-size: 12px !important;
  display: none; /* Hide descriptions in compact mode */
}

.compact-mode .dashboard-header {
  padding: 12px !important;
}

.compact-mode .dashboard-header h1 {
  font-size: 24px !important;
}

/* Reduced Motion Preferences */
@media (prefers-reduced-motion: reduce) {
  .reduce-motion *,
  .reduce-motion *::before,
  .reduce-motion *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .pattern-grid::before,
  .pattern-circuit::before,
  .pattern-hexagon::before {
    background-size: 15px 15px !important;
  }
  
  .tile-neon {
    box-shadow: 
      0 0 5px currentColor,
      0 0 10px currentColor;
  }
  
  .header-floating {
    margin: 8px;
  }
}

/* Dark mode enhancements */
@media (prefers-color-scheme: dark) {
  .tile-glass {
    backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.05);
  }
  
  .tile-minimal {
    border-color: rgba(255, 255, 255, 0.05);
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .tile-glass,
  .header-glass {
    backdrop-filter: none;
    background: var(--card-background) !important;
    border: 2px solid currentColor;
  }
  
  .tile-neon {
    box-shadow: none;
    border: 3px solid currentColor;
  }
}

/* Focus indicators for accessibility */
.dashboard-tile:focus-visible,
.theme-preset:focus-visible,
button:focus-visible,
input:focus-visible,
select:focus-visible,
textarea:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

/* Utility classes for dynamic styling */
.blur-backdrop {
  backdrop-filter: blur(var(--blur-amount, 10px));
}

.opacity-layer {
  opacity: var(--opacity-value, 1);
}

.custom-border-radius {
  border-radius: var(--border-radius, 8px);
}

.custom-pattern-size {
  background-size: var(--pattern-size, 20px) var(--pattern-size, 20px);
}

.custom-pattern-opacity {
  opacity: var(--pattern-opacity, 0.2);
}
